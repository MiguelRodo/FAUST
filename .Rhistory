library(Rcpp)
compileAttributes(verbose=TRUE)
library(Rcpp)
compileAttributes(verbose=TRUE)
library(roxygen2)
install.packages("roxygen2")
library(roxygen2)
roxygen2::roxygenize()
?getLoadedDLLs
library(roxygen2)
roxygen2::roxygenize()
library(roxygen2)
roxygen2::roxygenize(clean=TRUE)
library(roxygen2)
?roxygenize()
?roxygenize
roxygen2::roxygenize(clean=TRUE)
library(roxygen2)
roxygen2::roxygenize(clean=TRUE)
library(roxygen2)
roxygen2::roxygenize(clean=TRUE)
setwd("~/Repositories/statistical_rethinking")
setwd("~/Repositories/statistical_rethinking/Chapter 1")
install.packages("swirl")
library("swirl")
swirl()
main()
info()
nxt()
play()
swirl()
q()
library("swirl")
install_course("R Programming E")
swirl()
clear
install_course("The R Programming Environment")
swirl()
uninstall_course("R Programming E")
clear
swirl()
5+7
x <- 5 + 7
x
y <- x - 3
y
swirl()
c(1.1, 9, 3.14)
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555)
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
install_course("Getting and Cleaning Data")
clear
swirl()
swirl()
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
file.info()
list.files()
args(list.files)
old.dir <- getwd()
ls()
getwd()
dir.create("test_dir")
dir.create("testdir")
list.files()
setwd(testdir)
setwd("testdir")
ls()
getwd()
file.create("mytest.R")
ls()
list.files()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.info("mytest.R")
file.info("mytest.R")$gid
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
getwd()
file.path("mytest3.R")
file.path(getwd(), "mytest3.R")
file.path(folder1, folder2)
file.path("folder1", "folder2"")
file.path("folder1", "folder2")
?dir.create
args(dir.create)
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
setwd(old.dir)
clear
getwd()
ls()
list.files()
file.remove("test_dir/")
list.files()
file.remove("tests/")
file.remove("tests")
file.remove("testdir")
?file.remove
args(file.remove)
file.remove("testdir")
file.remove("testdir", recursive=TRUE)
file.remove("testdir", recursive=TRUE)
?unlink
unlink("testdir/")
ls()
list.files()
unlink("testdir")
list.files()
unlink("testdir", recursive=TRUE)
list.files()
list.files
list.files()
getwd(
)
file.path()
swirl()
list.files()
setwd("~/Desktop/FAUST/performance_tests/gating_sets/gs_size_028GB")
print(list.files(path = ".", recursive = TRUE),
print(list.files(path = ".", recursive = TRUE)
)
print(list.files(path = ".", recursive = TRUE))
system("du -h")
system("df -h")
setwd("~/Desktop/datasets/SDY820")
load("channelBounds.rds")
a = readRDS("channelBounds.rds")
a
a
attributes(a)
a."Cluster_1"
a["Cluster_1"]
attributes(a["Cluster_1"])
pData("gating_set")
gs <- load_gs("gating_set")
library("flowWorkspace")
gs <- load_gs("gating_set")
gs
gs
attributes(gs)
pData(gs)
head(pData(gs))
file.exists("channelBounds.rds"
)
dir.exists("gating_set")
cb = readRDS("channelBounds.rds")
!cb
is.list(cb)
cb
!""
!("")
!cb
cb
not cb
cb = readRDS("channelBounds.rds")
cb
!cb
!cb[[1]]
install.packages('curl', repos='https://cloud.r-project.org/', version='4.3')
install.packages('xml2', repos='https://cloud.r-project.org/', version='1.2.2')
BiocManager::install('flowWorkspace', version='3.10')
BiocManager::install(version = '3.10')
library(flowWorkspace)
clear
setwd("~/Desktop/FAUST/performance_tests/gating_sets/gs_size_232MB")
setwd("~/Desktop/FAUST/performance_tests/gating_sets")
load_gs("gs_size_232MB")
a = load_gs("gs_size_232MB")
a
attributes(a)
a = load_gs("gs_size_166MB")
a
a = load_gs("gs_size_001GB")
a
attributes(a)
a = load_gs("gs_size_028GB")
clear
a = load_gs("gs_size_028GB")
pritn
print
print("test")
library(devtools)
devtools
devtools::install_github?
?devtools::install_github
// print
# print
dir.exists(
setwd("~/Desktop/FAUST/performance_tests/helper_files")
a  = readRDS("channelBounds.rds")
a
setwd("~/Desktop/datasets/SDY820")
a  = readRDS("channelBounds.rds")
a
is
?is
?is.na
is.na("supervisedList.rds")
!is.na("supervisedList.rds")
?is.na
supervisedMarkers <- names(supervisedList)
supervisedMarkers <- names("supervisedList.rds")
supervisedMarkers
is.na(NA)
is.na("NA)
is.na("NA")
supervisedMarkers <- names("supervisedList.rds")
supervisedMarkers)
supervisedMarkers
length(supervisedMarkers)
list.dirs()
FALSE
TRUE
TRUE
flowWorkspace::load_gs()
?normalizePath
normalizePath(".")
clear
setwd("~/Desktop/datasets/SDY820")
a <- load_gs("gating_set")
flowWorkspace::sampleNames(a)
vector(a)
Sys.setenv()
?Sys.setenv()
saveRDS()
?saveRDS
getwd(())
getwd()
basename()
basename("c:/example.txt")
normalized_project_path = normalizePath(".")
meta_data_directory_path = paste0(normalized_project_path, "/faustData", "/metadata")
meta_data_directory_path
file.path
file.path("./", "test")
file.path(".", "test")
list.dirs()
list.files()
list.files()
normalizePath()
NULL
null
NULL
typeof(NULL)
// archDescriptionList=
//   list(
//       targetArch=c("singleCPU")
//   ),
archDescriptionList=list(targetArch=c("singleCPU"))
a <- archDescriptionList=list(targetArch=c("singleCPU"))
archDescriptionList <- list(targetArch=c("singleCPU"))
archDescriptionList
env
environment()
Sys.setenv(FAUST_NAME_OCCURRENCE_NUMBER="name_occurrence_number")
env
toString
test <- c("./faustData/expUnitData/s1", "./faustData/expUnitData/s2")
test
test <- "./faustData/expUnitData/s1" "./faustData/expUnitData/s2"
test <- c("./faustData/expUnitData/s1", "./faustData/expUnitData/s2")
test
basename(test)
a = readRDS("/Users/lknecht/Repositories/FAUST_Nextflow/work/27/e7be6d8e38b141bddd76072df2cfc8/faustData/expUnitData/s1/expUnitToSampleLookup.rds")
a
a = names(table(readRDS("/Users/lknecht/Repositories/FAUST_Nextflow/work/27/e7be6d8e38b141bddd76072df2cfc8/faustData/expUnitData/s1/expUnitToSampleLookup.rds")))
a
list.dirs()
experimental_unit_to_sample_lookup = c("test1", "test3", "test5")
setwd("~/Desktop/test")
list.dirs()
all_sample_directories = list.dirs()
a
all_sample_directories = list.dirs()
all_sample_directories
a
all_sample_directories = basename(list.dirs())
all_sample_directories
a
all_experimental_unit_samples = names(table(readRDS("/Users/lknecht/Repositories/FAUST_Nextflow/work/27/e7be6d8e38b141bddd76072df2cfc8/faustData/expUnitData/s1/expUnitToSampleLookup.rds")))
all_sample_directories = basename(list.dirs())
all_experimental_unit_samples
all_experimental_unit_samples <- names(table(readRDS("/Users/lknecht/Repositories/FAUST_Nextflow/work/27/e7be6d8e38b141bddd76072df2cfc8/faustData/expUnitData/s1/expUnitToSampleLookup.rds")))
all_experimental_unit_samples
all_sample_directories <- basename(list.dirs())
all_sample_directories
samples_to_include <- filter(all_samples_directory, sample %in% all_experimental_unit_samples)
samples_to_include <- filter(all_sample_directories, sample %in% all_experimental_unit_samples)
which(all_experimental_unit_samples %in% all_sample_directories)
a[which(all_experimental_unit_samples %in% all_sample_directories)]
a[which(all_experimental_unit_samples %not in% all_sample_directories)]
a[which(all_experimental_unit_samples !%in% all_sample_directories)]
a[which(all_experimental_unit_samples %in% all_sample_directories)]
?in
?which
!a[which(all_experimental_unit_samples %in% all_sample_directories)]
a[which(!all_experimental_unit_samples %in% all_sample_directories)]
a[which(all_experimental_unit_samples %in% all_sample_directories)]
x <- a[which(all_experimental_unit_samples %in% all_sample_directories)]
!a
!x
all_experimental_unit_samples %in% all_sample_directories
x <- all_experimental_unit_samples %in% all_sample_directories
x
x <- (all_experimental_unit_samples %in% all_sample_directories)
x
x <- (c(all_experimental_unit_samples) %in% c(all_sample_directories))
x
x <- a[which(all_experimental_unit_samples %in% all_sample_directories)]
x
"%nin%" = Negate("%in%")
directories_to_return <- a[which(all_experimental_unit_samples %in% all_sample_directories)]
directories_to_delete <- a[which(all_experimental_unit_samples %nin% all_sample_directories)]
directories_to_delete
directories_to_return
`%nin%` = Negate(`%in%`)
directories_to_return <- a[which(all_experimental_unit_samples %in% all_sample_directories)]
directories_to_delete <- a[which(all_experimental_unit_samples %nin% all_sample_directories)]
directories_to_return
directories_to_delete
'%nin%' = Negate('%in%')
directories_to_delete <- a[which(all_experimental_unit_samples %nin% all_sample_directories)]
directories_to_delete
`%nin%` = Negate(`%in%`)
%nin%
'%nin%' = Negate('%in%')
%nin%
directories_to_delete <- a[which(all_experimental_unit_samples %nin% all_sample_directories)]
directories_to_delete
View(`%nin%`)
View(`%nin%`)
View(`%nin%`)
library(Hmisc)
install.packages(Hmisc
%nin%
directories_to_delete <- a[which(all_experimental_unit_samples %nin% all_sample_directories)]
directories_to_delete
all_experimental_unit_samples
directories_to_delete <- a[which(all_sample_directories %nin% all_experimental_unit_samples)]
directories_to_delete
directories_to_delete <- a[which(all_sample_directories %in% all_experimental_unit_samples)]
directories_to_delete
all_sample_directories
all_experimental_unit_samples
directories_to_return <- a[which(all_experimental_unit_samples %in% all_sample_directories)]
directories_to_return
all_sample_directories <- basename(list.dirs())
all_experimental_unit_samples <- names(table(readRDS("/Users/lknecht/Repositories/FAUST_Nextflow/work/27/e7be6d8e38b141bddd76072df2cfc8/faustData/expUnitData/s1/expUnitToSampleLookup.rds")))
directories_to_return <- a[which(all_experimental_unit_samples %in% all_sample_directories)]
'%nin%' = Negate('%in%')
all_sample_directories <- basename(list.dirs())
all_experimental_unit_samples <- names(table(readRDS("/Users/lknecht/Repositories/FAUST_Nextflow/work/27/e7be6d8e38b141bddd76072df2cfc8/faustData/expUnitData/s1/expUnitToSampleLookup.rds")))
directories_to_return <- a[which(all_experimental_unit_samples %in% all_sample_directories)]
directories_to_delete <- a[which(all_sample_directories %nin% all_experimental_unit_samples)]
directories_to_delete <- a[which(all_sample_directories %in% all_experimental_unit_samples)]
setdiff(all_sample_directories, all_experimental_unit_samples)
'%nin%' = Negate('%in%')
all_sample_directories <- basename(list.dirs())
all_experimental_unit_samples <- names(table(readRDS("/Users/lknecht/Repositories/FAUST_Nextflow/work/27/e7be6d8e38b141bddd76072df2cfc8/faustData/expUnitData/s1/expUnitToSampleLookup.rds")))
directories_to_return <- a[which(all_experimental_unit_samples %in% all_sample_directories)]
directories_to_delete <- setdiff(all_sample_directories, all_experimental_unit_samples)
'%nin%' = Negate('%in%')
all_sample_directories <- basename(list.dirs())
all_experimental_unit_samples <- names(table(readRDS("/Users/lknecht/Repositories/FAUST_Nextflow/work/27/e7be6d8e38b141bddd76072df2cfc8/faustData/expUnitData/s1/expUnitToSampleLookup.rds")))
directories_to_return <- a[which(all_experimental_unit_samples %in% all_sample_directories)]
directories_to_delete <- setdiff(all_sample_directories, all_experimental_unit_samples)
directories_to_delete
directories_to_delete[!"."]
directories_to_delete[directories_to_delete != "."]
all_sample_directories <- basename(list.dirs())
all_experimental_unit_samples <- names(table(readRDS("/Users/lknecht/Repositories/FAUST_Nextflow/work/27/e7be6d8e38b141bddd76072df2cfc8/faustData/expUnitData/s1/expUnitToSampleLookup.rds")))
directories_to_return <- a[which(all_experimental_unit_samples %in% all_sample_directories)]
directories_to_delete <- setdiff(all_sample_directories, all_experimental_unit_samples)
directories_to_delete <- directories_to_delete[directories_to_delete != "."]
all_sample_directories <- basename(list.dirs())
all_experimental_unit_samples <- names(table(readRDS("/Users/lknecht/Repositories/FAUST_Nextflow/work/27/e7be6d8e38b141bddd76072df2cfc8/faustData/expUnitData/s1/expUnitToSampleLookup.rds")))
directories_to_return <- a[which(all_experimental_unit_samples %in% all_sample_directories)]
directories_to_delete <- setdiff(all_sample_directories, all_experimental_unit_samples)
directories_to_delete <- directories_to_delete[directories_to_delete != "."]
all_sample_directories <- basename(list.dirs())
all_experimental_unit_samples <- c("s1", "s3", "s5")
directories_to_return <- a[which(all_experimental_unit_samples %in% all_sample_directories)]
directories_to_delete <- setdiff(all_sample_directories, all_experimental_unit_samples)
directories_to_delete <- directories_to_delete[directories_to_delete != "."]
unlink(directories_to_delete)
unlink(directories_to_delete, recursive=TRUE)
x <- c("s1", "s2", "s3")
x
file_paths <- file.path("faustData", "sampleData", x)
file_paths
setwd("~/Desktop/FAUST/performance_tests/gating_sets/gs_size_001MB")
clear
load_gs(".")
a<-load_gs(".")
a
pData(a)
setwd("~/Desktop/FAUST/performance_tests/gating_sets/gs_size_166MB")
a<-load_gs(".")
pData(a)
